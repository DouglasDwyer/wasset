[workspace]

members = [
    ".",
    "wasset_example",
    "wasset_example/wasset_example_macro",
    "wasset_example/wasset_example_module",
    "wasset_example/wasset_example_schema",
]

[workspace.package]
edition = "2021"
version = "0.1.0"
license = "MIT OR Apache-2.0"
repository = "https://github.com/DouglasDwyer/wasset"
readme = "README.md"
description = """
Embed external assets into WASM modules.
"""

[workspace.dependencies]
# Internal dependencies
wasset = { path = ".", version = "0.1.0" }
wasset_example = { path = "wasset_example" }
wasset_example_macro = { path = "wasset_example/wasset_example_macro" }
wasset_example_module = { path = "wasset_example/wasset_example_module" }
wasset_example_schema = { path = "wasset_example/wasset_example_schema" }

# External dependencies
fxhash = { version = "0.2.1", default-features = false }
litrs = { version = "0.4.1", default-features = false }
proc-macro2 = { version = "1.0.78", default-features = false, features = [ "proc-macro" ] }
quote = { version = "1.0.35", default-features = false }
rmp-serde = { version = "1.3.0", default-features = false }
rustversion = { version = "1.0.17", default-features = false }
serde = { version = "1.0.204", default-features = false, features = [ "derive" ] }
thiserror = { version = "1.0.63", default-features = false }
toml = { version = "0.8.19", default-features = false, features = [ "parse" ] }
uuid = { version = "1.10.0", default-features = false, features = [ "serde", "std" ] }
wasmparser = { version = "0.215.0", default-features = false, features = [ "std" ] }

[package]
name = "wasset"
version.workspace = true
edition.workspace = true

[features]
encode = [ "dep:toml", "uuid/fast-rng", "uuid/v4" ]
encode_macro = [ "dep:litrs", "dep:proc-macro2", "dep:quote", "encode" ]
parse = [ "dep:wasmparser" ]
relative_path = [ "encode_macro" ]

[dependencies]
fxhash.workspace = true
litrs = { workspace = true, optional = true }
proc-macro2 = { workspace = true, optional = true }
quote = { workspace = true, optional = true }
rmp-serde.workspace = true
serde.workspace = true
thiserror.workspace = true
toml = { workspace = true, optional = true }
uuid.workspace = true
wasmparser = { workspace = true, optional = true }

[build-dependencies]
rustversion.workspace = true
